{"version":3,"sources":["sections/NavBar.js","components/SingleArticle.js","components/NewsArticles.js","sections/News.js","sections/Footer.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","props","handleSearchInput","event","setState","searchText","target","value","handleButtonClick","customSearch","state","submitHandler","preventDefault","handleSelectCategory","category","getAttribute","window","scrollTo","handleNavEverything","everything","Container","Navbar","collapseOnSelect","fixed","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","onClick","this","NavDropdown","title","Item","Form","inline","onSubmit","FormControl","onChange","type","placeholder","Button","variant","React","Component","SingleArticle","description","item","length","substring","date","Date","publishedAt","url","rel","Card","Img","src","urlToImage","alt","Body","Title","Text","format","NewsArticles","getNews","page","allResults","loading","axios","get","encodeURI","query","then","res","data","articles","news","concat","catch","error","console","log","componentDidMount","observer","IntersectionObserver","handleObserver","bind","root","rootMargin","threshold","observe","loadingRef","renderArticles","map","keys","key","prevY","entities","y","boundingClientRect","unobserve","prevProps","prevState","loadingCSS","height","textAlign","margin","display","fontSize","ref","style","News","Footer","App","handleCustomSearch","search","handleCategory","handleEverything","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.d25fe22c.chunk.js","sourcesContent":["import React from 'react';\nimport { Navbar, Nav, Form, NavDropdown, FormControl, Button, Container } from 'react-bootstrap';\n\n\nclass NavBar extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchText: \"\",\n    }\n  }\n\n  handleSearchInput = event => {\n    this.setState({\n      searchText: event.target.value\n    });\n  }\n\n  handleButtonClick = () => {\n    this.props.customSearch(this.state.searchText);\n  }\n\n  submitHandler = event => {\n    event.preventDefault();\n    this.handleButtonClick();\n  }\n\n  handleSelectCategory = event => {\n    // console.log(event.target.getAttribute(\"value\"));\n    this.props.category(event.target.getAttribute(\"value\"));\n    window.scrollTo(0, 0);\n  }\n  handleNavEverything = event => {\n    // console.log(event.target.getAttribute(\"value\"));\n    this.props.everything(event.target.getAttribute(\"value\"));\n    window.scrollTo(0, 0);\n  }\n\n\n  render() {\n    return (\n      <Container>\n        <Navbar collapseOnSelect fixed=\"top\" bg=\"light\" expand=\"lg\">\n          <Navbar.Brand href=\"#home\">Newsie</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <Nav.Link onClick={this.handleNavEverything} href=\"#everything\" value=\"everything\">Top Headlines</Nav.Link>\n              <NavDropdown title=\"Category\" id=\"basic-nav-dropdown\">\n                <NavDropdown.Item onClick={this.handleSelectCategory} href=\"#business\" value=\"business\">Business</NavDropdown.Item>\n                <NavDropdown.Item onClick={this.handleSelectCategory} href=\"#entertainment\" value=\"entertainment\">Entertainment</NavDropdown.Item>\n                <NavDropdown.Item onClick={this.handleSelectCategory} href=\"#general\" value=\"general\">General</NavDropdown.Item>\n                <NavDropdown.Item onClick={this.handleSelectCategory} href=\"#health\" value=\"health\">Health</NavDropdown.Item>\n                <NavDropdown.Item onClick={this.handleSelectCategory} href=\"#science\" value=\"science\">Science</NavDropdown.Item>\n                <NavDropdown.Item onClick={this.handleSelectCategory} href=\"#sports\" value=\"sports\">Sports</NavDropdown.Item>\n                <NavDropdown.Item onClick={this.handleSelectCategory} href=\"#technology\" value=\"technology\">Technology</NavDropdown.Item>\n              </NavDropdown>\n            </Nav>\n            <Form inline onSubmit={this.submitHandler}>\n              <FormControl\n                onChange={this.handleSearchInput}\n                value={this.state.searchText}\n                type=\"search\"\n                placeholder=\"Search\"\n                className=\"mr-sm-2\"\n                id=\"search-input\" />\n              <Button id=\"search-button\" onClick={this.handleButtonClick} variant=\"outline-success\">Search</Button>\n            </Form>\n          </Navbar.Collapse>\n\n        </Navbar>\n      </Container>\n    )\n  }\n}\n\nexport default NavBar","import React from 'react';\nimport { Card } from 'react-bootstrap';\nimport Moment from 'react-moment';\n// import ScrollAnimation from 'react-animate-on-scroll';\n\nconst SingleArticle = ({ item }) => {\n\n    //trunc the card text if bigger than n\n    let description;\n    let title;\n    let descStrlen = 100;\n    let titleStrlen = 75;\n    //trunc description\n    if(item.description && item.description.length > descStrlen){\n        description = `${item.description.substring(0,descStrlen)} ...`;\n    }\n    else{\n        description = item.description;\n    }\n    //trunc title\n    if(item.title && item.title.length > titleStrlen){\n        title = `${item.title.substring(0,titleStrlen)} ...`;\n    }\n    else{\n        title = item.title;\n    }\n\n    let date = new Date(item.publishedAt);\n    return (\n  \n            <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                <Card>\n                    <Card.Img variant=\"top\" src={item.urlToImage} alt={title} />\n                    <Card.Body>\n                        <Card.Title>{title}</Card.Title>\n                        <Card.Text>\n                            {description}\n                        </Card.Text>\n                        <Card.Text>\n                            <Moment format=\"YYYY-MM-DD\" >{date}</Moment>\n                        </Card.Text>\n                    </Card.Body>\n                </Card>\n            </a>\n     \n    )\n\n}\n\nexport default SingleArticle","import React from 'react';\nimport axios from 'axios';\nimport SingleArticle from './SingleArticle';\n\n\nclass NewsArticles extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            news: [],\n            loading: false,\n            page: 1,\n            prevY: 0,\n            allResults: false\n\n        };\n    }\n\n    getNews = (page = 1) => {\n        //less then 5 pages are loading and all the results havent been returned load another(api limit)\n        if (this.state.page <= 4 && !this.state.allResults) {\n            this.setState({ loading: true });\n            axios.get(encodeURI(`https://newsapi.org/v2/${this.props.url.type}${this.props.url.query}&page=${page}`), { 'headers': { 'x-api-key': '3e018690ee5f430da3e46a329a591eb1' } })\n                .then(res => {\n                    //if the results have add to array else set allResults true\n                    if (res.data.articles.length) {\n                        this.setState({\n                            news: this.state.news.concat([...res.data.articles])\n                        });\n                    }\n                    else {\n                        this.setState({ allResults: true });\n                    }\n                    //hide loading div\n                    this.setState({ loading: false });\n                })\n                .catch((error) => console.log(error));\n        }\n    }\n    //when the observer fires handle it by setting new y point and getting the next page of news\n    handleObserver(entities, observer) {\n        const y = entities[0].boundingClientRect.y;\n        if (this.state.prevY > y) {\n            observer.unobserve(this.loadingRef);\n            //get the next page of news\n            this.getNews(this.state.page + 1);\n            //set the page state to current displayed page\n            this.setState({ page: this.state.page + 1 },()=>{\n                observer.observe(this.loadingRef);\n            });\n        }\n        this.setState({ prevY: y });;\n    }\n    //get the default news onload\n    componentDidMount = () => {\n        this.getNews();\n        var options = {\n            root: null,\n            rootMargin: \"0px\",\n            threshold: 1.0\n        };\n        //create an observer to listen for the intersection of the loadingRef div at the bottom of the news div\n        this.observer = new IntersectionObserver(\n            this.handleObserver.bind(this),\n            options\n        );\n        this.observer.observe(this.loadingRef);\n\n    }\n\n\n    //if the new url !== the old load that\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.url !== this.props.url) {\n            //reset the page and news if the url changes \n            this.setState({\n                page: 1,\n                news: [],\n                allResults: false,\n                prevY:0,\n            },() => {this.getNews()});\n            //get the defult news for the url\n            \n        }\n    }\n\n    renderArticles = () => {\n        return this.state.news.map((item, keys) => (\n            <SingleArticle key={keys} item={item} />\n        ));\n    }\n\n    render() {\n        // Additional css\n        const loadingCSS = {\n            height: \"100px\",\n            textAlign:\"center\",\n            margin: '20px auto',\n            display: this.state.loading ? \"block\" : \"none\",\n            fontSize:\"2em\"\n            \n        };\n\n        return (\n\n            <div className=\"flex-container\">\n                <div className=\"d-flex flex-wrap align-items-center justify-content-center flex-news\">\n                    {this.renderArticles()}\n\n                </div>\n                <div\n                    ref={loadingRef => (this.loadingRef = loadingRef)}\n                >\n                    <span style={loadingCSS}>Loading...</span>\n                </div>\n            </div>\n\n\n        );\n    }\n}\n\nexport default NewsArticles","import React from 'react';\nimport NewsArticles from '../components/NewsArticles';\n\nclass News extends React.Component {\n\n    render() {\n        return (\n            <NewsArticles url={this.props.url} />\n        )\n    }\n}\n\n\n\nexport default News","import React from 'react';\n\n\n\n\nconst Footer = () => (\n  <footer>\n    <div className=\"copyrightLogo\">\n      <p>\n        <a href=\"https://newsapi.org/\" target=\"_blank\" rel=\"noopener noreferrer\">powered by NewsAPI.org</a>\n      </p>\n    </div>\n  </footer>\n)\n\nexport default Footer","import React from 'react';\nimport './css/App.scss';\nimport 'animate.css/animate.min.css';\nimport NavBar from './sections/NavBar';\nimport News from './sections/News';\nimport Footer from './sections/Footer';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      url: {\n        type: \"top-headlines\",\n        query: \"?country=us\"\n      }\n    }\n  }\n\n  handleCustomSearch = (search) => {\n    this.setState({\n      url: {\n        type: \"everything\",\n        query: `?q=${search}`\n      }\n    });\n  }\n\n  handleCategory = (category) => {\n    this.setState({\n      url: {\n        type: \"top-headlines\",\n        query: `?category=${category}&country=us`\n      }\n    })\n  }\n  handleEverything = () => {\n    this.setState({\n      url: {\n        type: \"top-headlines\",\n        query: `?country=us`\n      }\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <NavBar\n          customSearch={this.handleCustomSearch}\n          category={this.handleCategory}\n          everything={this.handleEverything}\n        />\n        <News url={this.state.url} />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}